name: Test Application ON PR

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Upgrade pip and install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        python -m unittest discover -s . -p "test_*.py"

  build:
    name: Build & Push Docker Image to ECR
    # Only run the build job on pushes (including tag pushes) to main.
    #if: github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with: 
          mask-password: 'true'
        #with:
        #  registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t usermanagement:${{ github.sha }} .

      - name: Tag Docker Image for ECR
        run: |
          docker tag usermanagement:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/usermanagement:${{ github.sha }}

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/usermanagement:${{ github.sha }}
  deploy_dev:
    name: Deploy to Dev
    #if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev
      #url: https://dev.example.com
    steps:
      - name: Checkout GitOps Repository
        uses: actions/checkout@v2
        with:
          repository: sverma/gitops
          token: ${{ secrets.GITOPS_TOKEN }}
          #path: manifests

      - name: Update Dev Manifest
        working-directory: manifests/dev
        run: |
          echo "Updating dev manifest with new image tag..."
          sed -i "s#image: .*usermanagement:.*#image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/usermanagement:${{ github.sha }}#g" deployment.yaml
          git config user.name "github-actions"
          git config user.email "s@3w3.one"
          git add deployment.yaml
          git commit -m "Deploy my-app:${{ github.sha }} to dev"
          git push
  deploy_stage:
    name: Deploy to Stage
    #if: github.event_name == 'push'
    needs: deploy_dev
    runs-on: ubuntu-latest
    environment:
      name: stage
      #url: https://dev.example.com
    steps:
      - name: Checkout GitOps Repository
        uses: actions/checkout@v2
        with:
          repository: sverma/gitops
          token: ${{ secrets.GITOPS_TOKEN }}
          #path: manifests

      - name: Update Stage Manifest
        working-directory: manifests/stage
        run: |
          echo "Updating dev manifest with new image tag..."
          sed -i "s#image: .*usermanagement:.*#image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/usermanagement:${{ github.sha }}#g" deployment.yaml
          git config user.name "github-actions"
          git config user.email "s@3w3.one"
          git add deployment.yaml
          git commit -m "Deploy my-app:${{ github.sha }} to dev"
          git push
  deploy_prod:
    name: Deploy to Prod
    #if: github.event_name == 'push'
    needs: deploy_stage
    runs-on: ubuntu-latest
    environment:
      name: prod
      #url: https://dev.example.com
    steps:
      - name: Checkout GitOps Repository
        uses: actions/checkout@v2
        with:
          repository: sverma/gitops
          token: ${{ secrets.GITOPS_TOKEN }}
          #path: manifests

      - name: Update Prod Manifest
        working-directory: manifests/prod
        run: |
          echo "Updating dev manifest with new image tag..."
          sed -i "s#image: .*usermanagement:.*#image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/usermanagement:${{ github.sha }}#g" deployment.yaml
          git config user.name "github-actions"
          git config user.email "s@3w3.one"
          git add deployment.yaml
          git commit -m "Deploy my-app:${{ github.sha }} to dev"
          git push